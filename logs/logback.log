[2022-07-23 16:17:59:960][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-23 16:17:59:959][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 9292 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-23 16:17:59:968][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-23 16:17:59:1024][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-23 16:17:59:1025][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-23 16:17:59:1025][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-23 16:17:59:1025][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-23 16:17:59:1027][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-23 16:17:59:1027][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-23 16:18:00:2064][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-23 16:18:01:2196][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 7 JPA repository interfaces.
[2022-07-23 16:18:01:2673][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:01:2679][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:01:2682][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:01:2684][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:01:2697][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3791][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3813][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3819][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3821][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800556c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3832][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$de526ac4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3859][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3873][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3874][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3874][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3876][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3878][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:02:3879][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:18:03:4314][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-23 16:18:03:4323][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:18:03:4324][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-23 16:18:03:4324][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-23 16:18:03:4486][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-23 16:18:03:4487][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3460 ms
[2022-07-23 16:18:03:4553][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-23 16:18:03:4684][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-23 16:18:03:4693][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-23 16:18:03:4874][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-23 16:18:03:4922][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-23 16:18:03:5065][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-23 16:18:03:5173][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-23 16:18:04:6030][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-23 16:18:04:6039][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 16:18:06:7594][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-23 16:18:06:7803][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@56e81245. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-23 16:18:06:7804][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@56e81245 with []
[2022-07-23 16:18:06:7917][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-23 16:18:07:8368][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-23 16:18:07:8812][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-23 16:18:07:8836][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:18:07:8857][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-23 16:18:07:8868][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 8.474 seconds (JVM running for 10.076)
[2022-07-23 16:18:10:11390][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-23 16:18:10:11391][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-23 16:18:10:11393][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
[2022-07-23 16:18:10:11452][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/e6241196's transaction start------------------------------
[2022-07-23 16:18:10:11453][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:18:10:11465][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:18:10:11469][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:18:10:11523][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 54ms
[2022-07-23 16:18:10:11524][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 59ms
[2022-07-23 16:18:10:11526][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e6241196] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 74ms
[2022-07-23 16:18:10:11530][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/e6241196's transaction end/74ms-------------------------
[2022-07-23 16:18:10:11535][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/7dd94f8e's transaction start------------------------------
[2022-07-23 16:18:10:11535][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7dd94f8e] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:18:10:11567][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7dd94f8e] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:18:10:11573][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7dd94f8e] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 6ms
[2022-07-23 16:18:10:11573][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7dd94f8e] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 38ms
[2022-07-23 16:18:10:11573][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/7dd94f8e's transaction end/38ms-------------------------
[2022-07-23 16:18:10:11575][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/7b0b1df6's transaction start------------------------------
[2022-07-23 16:18:10:11575][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7b0b1df6] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:18:10:11578][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7b0b1df6] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:18:10:11583][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7b0b1df6] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 5ms
[2022-07-23 16:18:10:11588][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7b0b1df6] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 13ms
[2022-07-23 16:18:10:11588][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/7b0b1df6's transaction end/13ms-------------------------
[2022-07-23 16:18:11:12880][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/71593185's transaction start------------------------------
[2022-07-23 16:18:11:12880][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/71593185] Return:String com.myblog.member.controller.MemberController.login() ,args = []
[2022-07-23 16:18:11:12882][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/71593185] Return:String com.myblog.member.controller.MemberController.login() time = 2ms
[2022-07-23 16:18:11:12882][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/71593185's transaction end/2ms-------------------------
[2022-07-23 16:18:11:12883][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/9e82bcf0's transaction start------------------------------
[2022-07-23 16:18:11:12883][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9e82bcf0] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:18:11:12890][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9e82bcf0] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:18:11:12892][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9e82bcf0] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 2ms
[2022-07-23 16:18:11:12892][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9e82bcf0] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 9ms
[2022-07-23 16:18:11:12892][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/9e82bcf0's transaction end/9ms-------------------------
[2022-07-23 16:18:11:12894][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2e2a522a's transaction start------------------------------
[2022-07-23 16:18:11:12894][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e2a522a] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:18:11:12894][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e2a522a] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:18:11:12897][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e2a522a] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 3ms
[2022-07-23 16:18:11:12898][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e2a522a] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 4ms
[2022-07-23 16:18:11:12898][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2e2a522a's transaction end/4ms-------------------------
[2022-07-23 16:18:13:14200][http-nio-8080-exec-7] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [411] milliseconds.
[2022-07-23 16:18:15:16695][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/30891554's transaction start------------------------------
[2022-07-23 16:18:15:16695][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/30891554] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) ,args = [org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest@61a2cc35]
[2022-07-23 16:18:15:16798][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/30891554] |-->Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) ,args = [jyh4358@gmail.com]
[2022-07-23 16:18:15:16805][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/30891554] |<--Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) time = 7ms
[2022-07-23 16:18:15:16806][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/30891554] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) time = 111ms
[2022-07-23 16:18:15:16806][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/30891554's transaction end/111ms-------------------------
[2022-07-23 16:18:15:16825][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/21fabb28's transaction start------------------------------
[2022-07-23 16:18:15:16825][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:18:15:16826][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:18:15:16826][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:18:15:16830][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-23 16:18:15:16830][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-23 16:18:15:16831][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/21fabb28] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 6ms
[2022-07-23 16:18:15:16832][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/21fabb28's transaction end/6ms-------------------------
[2022-07-23 16:18:15:16832][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/563a63a2's transaction start------------------------------
[2022-07-23 16:18:15:16832][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/563a63a2] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:18:15:16838][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/563a63a2] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:18:15:16839][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/563a63a2] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 1ms
[2022-07-23 16:18:15:16839][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/563a63a2] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 7ms
[2022-07-23 16:18:15:16839][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/563a63a2's transaction end/7ms-------------------------
[2022-07-23 16:18:15:16840][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/65e6b1ae's transaction start------------------------------
[2022-07-23 16:18:15:16841][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65e6b1ae] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:18:15:16841][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65e6b1ae] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:18:15:16843][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65e6b1ae] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:18:15:16846][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65e6b1ae] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 6ms
[2022-07-23 16:18:15:16846][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/65e6b1ae's transaction end/6ms-------------------------
[2022-07-23 16:18:16:17956][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/616b7739's transaction start------------------------------
[2022-07-23 16:18:16:17957][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], ALL, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-23 16:18:16:17958][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] |-->Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) ,args = [ALL, Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:18:16:17960][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:18:16:17968][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 8ms
[2022-07-23 16:18:16:18073][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] |<--Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) time = 115ms
[2022-07-23 16:18:16:18076][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/616b7739] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) time = 120ms
[2022-07-23 16:18:16:18076][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/616b7739's transaction end/120ms-------------------------
[2022-07-23 16:18:22:24117][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/f944eb1f's transaction start------------------------------
[2022-07-23 16:18:22:24118][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) ,args = [{}, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:22:24119][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] |-->Return:List com.myblog.article.service.TagService.findAllTag() ,args = []
[2022-07-23 16:18:22:24128][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] |<--Return:List com.myblog.article.service.TagService.findAllTag() time = 9ms
[2022-07-23 16:18:22:24130][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] |-->Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() ,args = []
[2022-07-23 16:18:22:24135][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] |<--Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() time = 5ms
[2022-07-23 16:18:22:24135][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f944eb1f] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) time = 18ms
[2022-07-23 16:18:22:24135][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/f944eb1f's transaction end/18ms-------------------------
[2022-07-23 16:18:23:24476][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/f53325c0's transaction start------------------------------
[2022-07-23 16:18:23:24477][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:23:24480][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] |-->Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:23:24484][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-23 16:18:23:24489][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 5ms
[2022-07-23 16:18:23:24490][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] |<--Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) time = 10ms
[2022-07-23 16:18:23:24491][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f53325c0] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) time = 15ms
[2022-07-23 16:18:23:24491][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/f53325c0's transaction end/15ms-------------------------
[2022-07-23 16:18:33:34964][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/3582504e's transaction start------------------------------
[2022-07-23 16:18:33:34964][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.saveArticle(ArticleWriteDto,CustomOauth2User) ,args = [ArticleWriteDto(title=[Lv.1] 완주하지 못한 선수, content=## 방법 1 - sort를 이용한 풀이

이 문제는 본래 Hash을 활용하는 문제이지만 Hash보다 더 쉬운 풀이법이 있다. 바로 Arrays의 sort() 함수를 사용하는 방법

간단히 sort() 메소드를 이용하여 정렬해주고, 인덱스에 따른 값들을 비교해주면 끝.

```
import java.util.Arrays;

class Solution {
    public String solution(String[] participant, String[] completion) {

        Arrays.sort(participant);
        Arrays.sort(completion);
        for (int i = 0; i < completion.length; i++) {
            if (!participant[i].equals(completion[i])) {
                return participant[i];
            }
        }
        return participant[participant.length-1];
    }

    public static void main(String[] args) {
        String[] participant = {"leo", "kiki", "eden"};
        String[] completion = {"eden", "kiki"};

        Solution sol = new Solution();
        System.out.println(sol.solution(participant, completion));
    }
}
```



### 방법 2 - Hash를 이용한 풀이

```
class Solution {

    public String solution(String[] participant, String[] completion) {
        String answer = "";
        // 1. Hash map을 만든다
        HashMap<String, Integer> map = new HashMap<>();
        for (String player : participant) {
            map.put(player, map.getOrDefault(player, 0) + 1);
        }

        // 2. hash map을 뺀다.
        for (String player : completion) {
            map.put(player, map.get(player) - 1);
        }

        // 3. value가 0이 아닌 마지막 주자를 찾는다. (keySet을 이용)
        for (String key : map.keySet()) {
            if (map.get(key) != 0) {
                answer = key;
                break;
            }
        }

        Iterator<Map.Entry<String, Integer>> iter = map.entrySet().iterator();
        while (iter.hasNext()) {
            Map.Entry<String, Integer> entry = iter.next();
            if (entry.getValue() != 0) {
                answer = entry.getKey();
                break;
            }
        }


        return answer;
    }

    pub
```

<br/>
<br/>
<br/>



> 참고

- `getOrDefault(key, defaultValue)` 은 key라는 값이 map에 없으면 defaultValue를 반환, 만약에 있으면 해당 value값을 가져오는 메서드이다.
- keySet보다는 Iterator를 이용한 entrySet을 사용하는게 성능이 더 좋다.

  , thumbnailUrl=, category=9, tags=[{"value":"Java"}]), Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:33:34968][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |-->Return:Article com.myblog.article.service.ArticleService.writeArticle(ArticleWriteDto,CustomOauth2User) ,args = [ArticleWriteDto(title=[Lv.1] 완주하지 못한 선수, content=## 방법 1 - sort를 이용한 풀이

이 문제는 본래 Hash을 활용하는 문제이지만 Hash보다 더 쉬운 풀이법이 있다. 바로 Arrays의 sort() 함수를 사용하는 방법

간단히 sort() 메소드를 이용하여 정렬해주고, 인덱스에 따른 값들을 비교해주면 끝.

```
import java.util.Arrays;

class Solution {
    public String solution(String[] participant, String[] completion) {

        Arrays.sort(participant);
        Arrays.sort(completion);
        for (int i = 0; i < completion.length; i++) {
            if (!participant[i].equals(completion[i])) {
                return participant[i];
            }
        }
        return participant[participant.length-1];
    }

    public static void main(String[] args) {
        String[] participant = {"leo", "kiki", "eden"};
        String[] completion = {"eden", "kiki"};

        Solution sol = new Solution();
        System.out.println(sol.solution(participant, completion));
    }
}
```



### 방법 2 - Hash를 이용한 풀이

```
class Solution {

    public String solution(String[] participant, String[] completion) {
        String answer = "";
        // 1. Hash map을 만든다
        HashMap<String, Integer> map = new HashMap<>();
        for (String player : participant) {
            map.put(player, map.getOrDefault(player, 0) + 1);
        }

        // 2. hash map을 뺀다.
        for (String player : completion) {
            map.put(player, map.get(player) - 1);
        }

        // 3. value가 0이 아닌 마지막 주자를 찾는다. (keySet을 이용)
        for (String key : map.keySet()) {
            if (map.get(key) != 0) {
                answer = key;
                break;
            }
        }

        Iterator<Map.Entry<String, Integer>> iter = map.entrySet().iterator();
        while (iter.hasNext()) {
            Map.Entry<String, Integer> entry = iter.next();
            if (entry.getValue() != 0) {
                answer = entry.getKey();
                break;
            }
        }


        return answer;
    }

    pub
```

<br/>
<br/>
<br/>



> 참고

- `getOrDefault(key, defaultValue)` 은 key라는 값이 map에 없으면 defaultValue를 반환, 만약에 있으면 해당 value값을 가져오는 메서드이다.
- keySet보다는 Iterator를 이용한 entrySet을 사용하는게 성능이 더 좋다.

  , thumbnailUrl=, category=9, tags=[{"value":"Java"}]), Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:33:34970][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [9]
[2022-07-23 16:18:33:34971][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-23 16:18:33:34979][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Optional com.myblog.article.repository.TagRepository.findByName(String) ,args = [Java]
[2022-07-23 16:18:33:34983][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Optional com.myblog.article.repository.TagRepository.findByName(String) time = 4ms
[2022-07-23 16:18:33:34984][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35050][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 66ms
[2022-07-23 16:18:33:35050][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35053][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 3ms
[2022-07-23 16:18:33:35053][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35054][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35055][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@7a6c972]
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 0ms
[2022-07-23 16:18:33:35056][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] |<--Return:Article com.myblog.article.service.ArticleService.writeArticle(ArticleWriteDto,CustomOauth2User) time = 88ms
[2022-07-23 16:18:33:35066][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3582504e] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.saveArticle(ArticleWriteDto,CustomOauth2User) time = 102ms
[2022-07-23 16:18:33:35066][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/3582504e's transaction end/102ms-------------------------
[2022-07-23 16:18:33:35076][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/908e3198's transaction start------------------------------
[2022-07-23 16:18:33:35077][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.deleteAutoSavedArticle(Long,CustomOauth2User) ,args = [1, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:33:35077][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] |-->Return:void com.myblog.temparticle.service.TempArticleService.deleteAutoSavedArticle(Long,CustomOauth2User) ,args = [1, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:18:33:35081][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/0c2ef1cc's transaction start------------------------------
[2022-07-23 16:18:33:35081][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [56, null, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3b5943da]
[2022-07-23 16:18:33:35084][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [56]
[2022-07-23 16:18:33:35084][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] |   |-->Return:void org.springframework.data.repository.CrudRepository.deleteById(Object) ,args = [1]
[2022-07-23 16:18:33:35084][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [56]
[2022-07-23 16:18:33:35086][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-23 16:18:33:35087][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [56]
[2022-07-23 16:18:33:35090][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] |   |<--Return:void org.springframework.data.repository.CrudRepository.deleteById(Object) time = 6ms
[2022-07-23 16:18:33:35090][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] |<--Return:void com.myblog.temparticle.service.TempArticleService.deleteAutoSavedArticle(Long,CustomOauth2User) time = 13ms
[2022-07-23 16:18:33:35096][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 9ms
[2022-07-23 16:18:33:35096][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 12ms
[2022-07-23 16:18:33:35097][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [56, true]
[2022-07-23 16:18:33:35097][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [56]
[2022-07-23 16:18:33:35097][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-23 16:18:33:35098][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [56]
[2022-07-23 16:18:33:35104][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 6ms
[2022-07-23 16:18:33:35105][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/908e3198] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.deleteAutoSavedArticle(Long,CustomOauth2User) time = 29ms
[2022-07-23 16:18:33:35105][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/908e3198's transaction end/29ms-------------------------
[2022-07-23 16:18:33:35111][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@515b94a4]
[2022-07-23 16:18:33:35118][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 7ms
[2022-07-23 16:18:33:35118][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 21ms
[2022-07-23 16:18:33:35122][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0c2ef1cc] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 41ms
[2022-07-23 16:18:33:35122][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/0c2ef1cc's transaction end/41ms-------------------------
[2022-07-23 16:18:33:35123][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/b9b537a6's transaction start------------------------------
[2022-07-23 16:18:33:35123][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b9b537a6] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:18:33:35128][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b9b537a6] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:18:33:35129][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b9b537a6] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 1ms
[2022-07-23 16:18:33:35129][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b9b537a6] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 6ms
[2022-07-23 16:18:33:35129][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/b9b537a6's transaction end/6ms-------------------------
[2022-07-23 16:18:33:35130][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/6cf01374's transaction start------------------------------
[2022-07-23 16:18:33:35130][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6cf01374] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:18:33:35130][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6cf01374] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:18:33:35132][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6cf01374] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:18:33:35133][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6cf01374] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 3ms
[2022-07-23 16:18:33:35133][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/6cf01374's transaction end/3ms-------------------------
[2022-07-23 16:18:37:38607][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/aec24b23's transaction start------------------------------
[2022-07-23 16:18:37:38608][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:18:37:38609][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:18:37:38609][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:18:37:38612][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 3ms
[2022-07-23 16:18:37:38612][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 3ms
[2022-07-23 16:18:37:38613][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/aec24b23] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 6ms
[2022-07-23 16:18:37:38613][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/aec24b23's transaction end/6ms-------------------------
[2022-07-23 16:18:37:38614][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/33c72bb7's transaction start------------------------------
[2022-07-23 16:18:37:38614][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33c72bb7] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:18:37:38620][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33c72bb7] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:18:37:38621][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33c72bb7] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 1ms
[2022-07-23 16:18:37:38621][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33c72bb7] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 7ms
[2022-07-23 16:18:37:38622][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/33c72bb7's transaction end/7ms-------------------------
[2022-07-23 16:18:37:38623][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2e80b411's transaction start------------------------------
[2022-07-23 16:18:37:38623][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e80b411] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:18:37:38623][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e80b411] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:18:37:38625][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e80b411] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:18:37:38626][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e80b411] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 3ms
[2022-07-23 16:18:37:38626][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2e80b411's transaction end/3ms-------------------------
[2022-07-23 16:18:38:39439][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/b111d630's transaction start------------------------------
[2022-07-23 16:18:38:39440][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [0]
[2022-07-23 16:18:38:39441][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [0]
[2022-07-23 16:18:38:39441][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 0, size 8, sort: UNSORTED]]
[2022-07-23 16:18:38:39446][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 5ms
[2022-07-23 16:18:38:39451][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 10ms
[2022-07-23 16:18:38:39452][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b111d630] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 13ms
[2022-07-23 16:18:38:39452][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/b111d630's transaction end/13ms-------------------------
[2022-07-23 16:18:38:39457][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/5c169935's transaction start------------------------------
[2022-07-23 16:18:38:39457][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [1]
[2022-07-23 16:18:38:39458][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [1]
[2022-07-23 16:18:38:39458][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 1, size 8, sort: UNSORTED]]
[2022-07-23 16:18:38:39459][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 1ms
[2022-07-23 16:18:38:39460][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 2ms
[2022-07-23 16:18:38:39460][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/5c169935] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 3ms
[2022-07-23 16:18:38:39460][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/5c169935's transaction end/3ms-------------------------
[2022-07-23 16:19:09:71153][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/74452319's transaction start------------------------------
[2022-07-23 16:19:09:71154][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], ALL, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-23 16:19:09:71155][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] |-->Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) ,args = [ALL, Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:19:09:71155][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:19:09:71157][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 2ms
[2022-07-23 16:19:09:71161][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] |<--Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) time = 6ms
[2022-07-23 16:19:09:71162][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/74452319] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) time = 9ms
[2022-07-23 16:19:09:71162][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/74452319's transaction end/9ms-------------------------
[2022-07-23 16:19:13:75085][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/4d50dc03's transaction start------------------------------
[2022-07-23 16:19:13:75085][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) ,args = [{}, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:19:13:75086][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] |-->Return:List com.myblog.article.service.TagService.findAllTag() ,args = []
[2022-07-23 16:19:13:75089][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] |<--Return:List com.myblog.article.service.TagService.findAllTag() time = 3ms
[2022-07-23 16:19:13:75090][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] |-->Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() ,args = []
[2022-07-23 16:19:13:75095][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] |<--Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() time = 5ms
[2022-07-23 16:19:13:75096][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4d50dc03] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) time = 11ms
[2022-07-23 16:19:13:75096][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/4d50dc03's transaction end/11ms-------------------------
[2022-07-23 16:19:14:75391][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/312cba44's transaction start------------------------------
[2022-07-23 16:19:14:75392][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:19:14:75393][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] |-->Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:19:14:75393][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-23 16:19:14:75395][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-23 16:19:14:75395][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] |<--Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) time = 2ms
[2022-07-23 16:19:14:75395][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/312cba44] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) time = 4ms
[2022-07-23 16:19:14:75395][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/312cba44's transaction end/4ms-------------------------
[2022-07-23 16:22:00:242136][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 16:22:00:242139][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-23 16:22:00:242147][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-23 16:22:10:849][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 21556 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-23 16:22:10:850][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-23 16:22:10:852][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-23 16:22:10:893][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-23 16:22:10:893][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-23 16:22:10:893][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-23 16:22:10:893][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-23 16:22:10:894][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-23 16:22:10:894][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-23 16:22:11:1834][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-23 16:22:11:1961][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120 ms. Found 7 JPA repository interfaces.
[2022-07-23 16:22:11:2419][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:11:2424][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:11:2427][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:11:2429][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:11:2435][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3509][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3526][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3531][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3534][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800551c40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3541][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$adf5afa3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3562][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3572][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3573][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3573][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3575][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3576][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:12:3576][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:22:13:3977][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-23 16:22:13:3986][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:22:13:3987][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-23 16:22:13:3987][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-23 16:22:13:4122][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-23 16:22:13:4123][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3228 ms
[2022-07-23 16:22:13:4184][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-23 16:22:13:4308][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-23 16:22:13:4318][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-23 16:22:13:4398][restartedMain] WARN  o.a.c.c.C.[Tomcat].[localhost].[/] - Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [479E80C143378D1E1CD54AEA468D35C7]
[2022-07-23 16:22:13:4511][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-23 16:22:13:4560][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-23 16:22:13:4702][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-23 16:22:14:4811][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-23 16:22:14:5615][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-23 16:22:14:5625][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 16:22:16:6939][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-23 16:22:16:7139][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@70df374f. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-23 16:22:16:7139][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@70df374f with []
[2022-07-23 16:22:16:7245][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-23 16:22:16:7595][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-23 16:22:17:7964][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-23 16:22:17:7990][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:22:17:8009][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-23 16:22:17:8019][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 7.632 seconds (JVM running for 9.159)
[2022-07-23 16:22:21:11936][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-23 16:22:21:11936][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-23 16:22:21:11938][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-23 16:22:21:12004][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/d999515e's transaction start------------------------------
[2022-07-23 16:22:21:12004][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d999515e] Return:String com.myblog.member.controller.MemberController.login() ,args = []
[2022-07-23 16:22:21:12007][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d999515e] Return:String com.myblog.member.controller.MemberController.login() time = 3ms
[2022-07-23 16:22:21:12011][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/d999515e's transaction end/3ms-------------------------
[2022-07-23 16:22:21:12023][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/a4616742's transaction start------------------------------
[2022-07-23 16:22:21:12023][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a4616742] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:22:21:12088][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a4616742] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:22:21:12097][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a4616742] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 9ms
[2022-07-23 16:22:21:12098][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a4616742] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 75ms
[2022-07-23 16:22:21:12098][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/a4616742's transaction end/75ms-------------------------
[2022-07-23 16:22:21:12100][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/d2e96a82's transaction start------------------------------
[2022-07-23 16:22:21:12100][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2e96a82] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:22:21:12103][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2e96a82] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:22:21:12116][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2e96a82] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 13ms
[2022-07-23 16:22:21:12119][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2e96a82] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 19ms
[2022-07-23 16:22:21:12120][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/d2e96a82's transaction end/19ms-------------------------
[2022-07-23 16:22:38:28937][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/f57ae749's transaction start------------------------------
[2022-07-23 16:22:38:28937][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f57ae749] Return:String com.myblog.member.controller.MemberController.login() ,args = []
[2022-07-23 16:22:38:28938][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f57ae749] Return:String com.myblog.member.controller.MemberController.login() time = 1ms
[2022-07-23 16:22:38:28938][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/f57ae749's transaction end/1ms-------------------------
[2022-07-23 16:22:38:28939][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/8521cb7d's transaction start------------------------------
[2022-07-23 16:22:38:28939][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8521cb7d] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:22:38:28947][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8521cb7d] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:22:38:28948][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8521cb7d] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 1ms
[2022-07-23 16:22:38:28948][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8521cb7d] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 9ms
[2022-07-23 16:22:38:28948][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/8521cb7d's transaction end/9ms-------------------------
[2022-07-23 16:22:38:28949][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/4f55e2aa's transaction start------------------------------
[2022-07-23 16:22:38:28949][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f55e2aa] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:22:38:28949][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f55e2aa] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:22:38:28951][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f55e2aa] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:22:38:28954][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f55e2aa] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 5ms
[2022-07-23 16:22:38:28954][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/4f55e2aa's transaction end/5ms-------------------------
[2022-07-23 16:22:41:32652][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/47ac17ba's transaction start------------------------------
[2022-07-23 16:22:41:32652][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47ac17ba] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) ,args = [org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest@3d7c6d73]
[2022-07-23 16:22:42:32765][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47ac17ba] |-->Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) ,args = [jyh4358@gmail.com]
[2022-07-23 16:22:42:32773][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47ac17ba] |<--Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) time = 8ms
[2022-07-23 16:22:42:32774][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47ac17ba] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) time = 122ms
[2022-07-23 16:22:42:32774][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/47ac17ba's transaction end/122ms-------------------------
[2022-07-23 16:22:42:33197][http-nio-8080-exec-5] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [407] milliseconds.
[2022-07-23 16:22:42:33209][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/8cc251b2's transaction start------------------------------
[2022-07-23 16:22:42:33209][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) ,args = [{}, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:42:33214][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] |-->Return:List com.myblog.article.service.TagService.findAllTag() ,args = []
[2022-07-23 16:22:42:33222][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] |<--Return:List com.myblog.article.service.TagService.findAllTag() time = 8ms
[2022-07-23 16:22:42:33223][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] |-->Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() ,args = []
[2022-07-23 16:22:42:33230][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] |<--Return:CategoryListDto com.myblog.category.service.CategoryService.findCategories() time = 7ms
[2022-07-23 16:22:42:33232][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8cc251b2] Return:String com.myblog.article.controller.ArticleController.articleWriteForm(Model,CustomOauth2User) time = 22ms
[2022-07-23 16:22:42:33232][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/8cc251b2's transaction end/22ms-------------------------
[2022-07-23 16:22:42:33673][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/8eb3bd62's transaction start------------------------------
[2022-07-23 16:22:42:33674][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:42:33677][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] |-->Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:42:33681][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-23 16:22:42:33684][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 3ms
[2022-07-23 16:22:42:33685][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] |<--Return:TempArticleDto com.myblog.temparticle.service.TempArticleService.findAutoSavedArticle(CustomOauth2User) time = 8ms
[2022-07-23 16:22:42:33686][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8eb3bd62] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.findAutoSavedArticle(CustomOauth2User) time = 13ms
[2022-07-23 16:22:42:33686][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/8eb3bd62's transaction end/13ms-------------------------
[2022-07-23 16:22:49:40559][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/4cfa417f's transaction start------------------------------
[2022-07-23 16:22:49:40559][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.saveArticle(ArticleWriteDto,CustomOauth2User) ,args = [ArticleWriteDto(title=1, content=1, thumbnailUrl=, category=3, tags=[{"value":"백기선"}]), Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:49:40562][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |-->Return:Article com.myblog.article.service.ArticleService.writeArticle(ArticleWriteDto,CustomOauth2User) ,args = [ArticleWriteDto(title=1, content=1, thumbnailUrl=, category=3, tags=[{"value":"백기선"}]), Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:49:40565][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [3]
[2022-07-23 16:22:49:40567][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-23 16:22:49:40575][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Optional com.myblog.article.repository.TagRepository.findByName(String) ,args = [백기선]
[2022-07-23 16:22:49:40579][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Optional com.myblog.article.repository.TagRepository.findByName(String) time = 4ms
[2022-07-23 16:22:49:40580][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@745dc351]
[2022-07-23 16:22:49:40638][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 58ms
[2022-07-23 16:22:49:40638][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@613f559b]
[2022-07-23 16:22:49:40640][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 2ms
[2022-07-23 16:22:49:40640][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@4ff22d24]
[2022-07-23 16:22:49:40643][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 3ms
[2022-07-23 16:22:49:40643][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@4def317a]
[2022-07-23 16:22:49:40644][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:22:49:40645][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@5eaa6f38]
[2022-07-23 16:22:49:40646][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:22:49:40646][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@46d19556]
[2022-07-23 16:22:49:40648][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 2ms
[2022-07-23 16:22:49:40648][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@1a0a2059]
[2022-07-23 16:22:49:40649][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:22:49:40649][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@4a633c06]
[2022-07-23 16:22:49:40651][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 2ms
[2022-07-23 16:22:49:40651][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@38b55cc1]
[2022-07-23 16:22:49:40652][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 1ms
[2022-07-23 16:22:49:40652][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@13fa9d46]
[2022-07-23 16:22:49:40654][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 2ms
[2022-07-23 16:22:49:40654][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.article.model.Article@301cb435]
[2022-07-23 16:22:49:40656][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 2ms
[2022-07-23 16:22:49:40656][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] |<--Return:Article com.myblog.article.service.ArticleService.writeArticle(ArticleWriteDto,CustomOauth2User) time = 94ms
[2022-07-23 16:22:49:40672][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4cfa417f] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.saveArticle(ArticleWriteDto,CustomOauth2User) time = 113ms
[2022-07-23 16:22:49:40672][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/4cfa417f's transaction end/113ms-------------------------
[2022-07-23 16:22:49:40683][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/eceb11d3's transaction start------------------------------
[2022-07-23 16:22:49:40683][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eceb11d3] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.deleteAutoSavedArticle(Long,CustomOauth2User) ,args = [1, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:49:40684][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eceb11d3] |-->Return:void com.myblog.temparticle.service.TempArticleService.deleteAutoSavedArticle(Long,CustomOauth2User) ,args = [1, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-23 16:22:49:40688][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eceb11d3] |<--Return:void com.myblog.temparticle.service.TempArticleService.deleteAutoSavedArticle(Long,CustomOauth2User) time = 4ms
[2022-07-23 16:22:49:40689][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eceb11d3] Return:ResponseEntity com.myblog.temparticle.controller.TempArticleApiController.deleteAutoSavedArticle(Long,CustomOauth2User) time = 6ms
[2022-07-23 16:22:49:40689][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/eceb11d3's transaction end/6ms-------------------------
[2022-07-23 16:22:49:40691][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/47cc51e0's transaction start------------------------------
[2022-07-23 16:22:49:40691][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [67, 56/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3a9528de]
[2022-07-23 16:22:49:40695][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [67]
[2022-07-23 16:22:49:40695][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [67]
[2022-07-23 16:22:49:40697][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-23 16:22:49:40697][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [67]
[2022-07-23 16:22:49:40706][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 9ms
[2022-07-23 16:22:49:40706][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 11ms
[2022-07-23 16:22:49:40707][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [67, true]
[2022-07-23 16:22:49:40708][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [67]
[2022-07-23 16:22:49:40708][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-23 16:22:49:40708][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [67]
[2022-07-23 16:22:49:40712][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 4ms
[2022-07-23 16:22:50:40753][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@2c7eede3]
[2022-07-23 16:22:50:40759][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 6ms
[2022-07-23 16:22:50:40759][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 52ms
[2022-07-23 16:22:50:40763][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/47cc51e0] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 72ms
[2022-07-23 16:22:50:40763][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/47cc51e0's transaction end/72ms-------------------------
[2022-07-23 16:22:50:40763][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2d89befb's transaction start------------------------------
[2022-07-23 16:22:50:40763][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2d89befb] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:22:50:40769][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2d89befb] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:22:50:40772][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2d89befb] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 3ms
[2022-07-23 16:22:50:40772][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2d89befb] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 9ms
[2022-07-23 16:22:50:40772][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2d89befb's transaction end/9ms-------------------------
[2022-07-23 16:22:50:40774][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/13f448bd's transaction start------------------------------
[2022-07-23 16:22:50:40774][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/13f448bd] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:22:50:40774][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/13f448bd] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:22:50:40776][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/13f448bd] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:22:50:40777][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/13f448bd] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 4ms
[2022-07-23 16:22:50:40777][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/13f448bd's transaction end/4ms-------------------------
[2022-07-23 16:22:54:45532][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/c15a7a93's transaction start------------------------------
[2022-07-23 16:22:54:45532][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], ALL, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-23 16:22:54:45533][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] |-->Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) ,args = [ALL, Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:22:54:45535][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-23 16:22:54:45550][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 15ms
[2022-07-23 16:22:54:45605][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] |<--Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) time = 72ms
[2022-07-23 16:22:54:45608][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c15a7a93] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) time = 76ms
[2022-07-23 16:22:54:45608][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/c15a7a93's transaction end/76ms-------------------------
[2022-07-23 16:27:00:291138][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 16:27:00:291142][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-23 16:27:00:291150][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-23 16:27:09:877][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-23 16:27:09:877][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 26324 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-23 16:27:09:880][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-23 16:27:09:922][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-23 16:27:09:922][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-23 16:27:09:922][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-23 16:27:09:922][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-23 16:27:09:923][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-23 16:27:09:924][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-23 16:27:10:1911][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-23 16:27:10:2046][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 7 JPA repository interfaces.
[2022-07-23 16:27:10:2510][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:10:2517][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:10:2520][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:10:2522][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:10:2528][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3594][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3613][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3618][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3619][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800557440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3628][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$26a1dd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3648][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3659][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3659][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3660][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3661][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3662][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:11:3663][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-23 16:27:12:4091][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-23 16:27:12:4101][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:27:12:4102][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-23 16:27:12:4102][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-23 16:27:12:4248][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-23 16:27:12:4248][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3323 ms
[2022-07-23 16:27:12:4309][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-23 16:27:12:4436][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-23 16:27:12:4446][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-23 16:27:12:4550][restartedMain] WARN  o.a.c.c.C.[Tomcat].[localhost].[/] - Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [1EE9AD5CE9FF1F9C77EED14D72370407]
[2022-07-23 16:27:12:4683][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-23 16:27:12:4741][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-23 16:27:13:4885][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-23 16:27:13:4998][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-23 16:27:14:5853][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-23 16:27:14:5863][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 16:27:15:7177][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-23 16:27:15:7389][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@5953dab2. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-23 16:27:15:7390][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@5953dab2 with []
[2022-07-23 16:27:15:7503][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-23 16:27:16:7878][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-23 16:27:16:8279][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-23 16:27:16:8304][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-23 16:27:16:8322][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-23 16:27:16:8334][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 7.926 seconds (JVM running for 9.489)
[2022-07-23 16:27:16:8519][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-23 16:27:16:8519][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-23 16:27:16:8520][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-23 16:27:16:8578][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/40fc2a3e's transaction start------------------------------
[2022-07-23 16:27:16:8578][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:27:16:8590][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:27:16:8594][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:27:16:8647][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 53ms
[2022-07-23 16:27:16:8648][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 59ms
[2022-07-23 16:27:16:8649][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/40fc2a3e] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 72ms
[2022-07-23 16:27:16:8653][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/40fc2a3e's transaction end/72ms-------------------------
[2022-07-23 16:27:16:8658][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/2958a8fa's transaction start------------------------------
[2022-07-23 16:27:16:8658][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/2958a8fa] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:27:16:8686][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/2958a8fa] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:27:16:8691][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/2958a8fa] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 5ms
[2022-07-23 16:27:16:8692][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/2958a8fa] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 34ms
[2022-07-23 16:27:16:8692][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/2958a8fa's transaction end/34ms-------------------------
[2022-07-23 16:27:16:8693][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/a4a45434's transaction start------------------------------
[2022-07-23 16:27:16:8693][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a4a45434] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:27:16:8696][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a4a45434] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:27:16:8701][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a4a45434] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 5ms
[2022-07-23 16:27:16:8705][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a4a45434] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 12ms
[2022-07-23 16:27:16:8705][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/a4a45434's transaction end/12ms-------------------------
[2022-07-23 16:27:18:10506][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/36625937's transaction start------------------------------
[2022-07-23 16:27:18:10507][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [0]
[2022-07-23 16:27:18:10510][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [0]
[2022-07-23 16:27:18:10510][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 0, size 8, sort: UNSORTED]]
[2022-07-23 16:27:18:10515][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/96b6d1ca's transaction start------------------------------
[2022-07-23 16:27:18:10515][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [1]
[2022-07-23 16:27:18:10517][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [1]
[2022-07-23 16:27:18:10517][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 1, size 8, sort: UNSORTED]]
[2022-07-23 16:27:18:10518][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 8ms
[2022-07-23 16:27:18:10522][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 5ms
[2022-07-23 16:27:18:10532][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/280358a1's transaction start------------------------------
[2022-07-23 16:27:18:10532][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [2]
[2022-07-23 16:27:18:10533][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [2]
[2022-07-23 16:27:18:10534][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 2, size 8, sort: UNSORTED]]
[2022-07-23 16:27:18:10536][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 2ms
[2022-07-23 16:27:18:10549][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/4dd2f44e's transaction start------------------------------
[2022-07-23 16:27:18:10549][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [3]
[2022-07-23 16:27:18:10550][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [3]
[2022-07-23 16:27:18:10550][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 3, size 8, sort: UNSORTED]]
[2022-07-23 16:27:18:10552][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 2ms
[2022-07-23 16:27:18:10552][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 2ms
[2022-07-23 16:27:18:10553][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4dd2f44e] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 4ms
[2022-07-23 16:27:18:10553][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/4dd2f44e's transaction end/4ms-------------------------
[2022-07-23 16:27:18:10567][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/22d404f4's transaction start------------------------------
[2022-07-23 16:27:18:10567][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [4]
[2022-07-23 16:27:18:10569][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [4]
[2022-07-23 16:27:18:10569][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 4, size 8, sort: UNSORTED]]
[2022-07-23 16:27:18:10572][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 3ms
[2022-07-23 16:27:18:10572][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 3ms
[2022-07-23 16:27:18:10573][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22d404f4] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 6ms
[2022-07-23 16:27:18:10573][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/22d404f4's transaction end/6ms-------------------------
[2022-07-23 16:27:18:10619][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 86ms
[2022-07-23 16:27:18:10619][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/280358a1] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 87ms
[2022-07-23 16:27:18:10619][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/280358a1's transaction end/87ms-------------------------
[2022-07-23 16:27:18:10620][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 109ms
[2022-07-23 16:27:18:10620][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/36625937] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 114ms
[2022-07-23 16:27:18:10620][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/36625937's transaction end/114ms-------------------------
[2022-07-23 16:27:18:10626][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 109ms
[2022-07-23 16:27:18:10626][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/96b6d1ca] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 111ms
[2022-07-23 16:27:18:10627][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/96b6d1ca's transaction end/111ms-------------------------
[2022-07-23 16:28:18:70688][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/4f53e204's transaction start------------------------------
[2022-07-23 16:28:18:70688][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:28:18:70690][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:28:18:70690][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:28:18:70695][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 5ms
[2022-07-23 16:28:18:70695][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 6ms
[2022-07-23 16:28:18:70696][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/4f53e204] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 8ms
[2022-07-23 16:28:18:70696][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/4f53e204's transaction end/8ms-------------------------
[2022-07-23 16:28:18:70696][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/46d3a8b6's transaction start------------------------------
[2022-07-23 16:28:18:70696][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/46d3a8b6] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:28:18:70702][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/46d3a8b6] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:28:18:70703][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/46d3a8b6] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 1ms
[2022-07-23 16:28:18:70703][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/46d3a8b6] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 7ms
[2022-07-23 16:28:18:70703][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/46d3a8b6's transaction end/7ms-------------------------
[2022-07-23 16:28:18:70704][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/033d3e96's transaction start------------------------------
[2022-07-23 16:28:18:70704][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/033d3e96] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:28:18:70704][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/033d3e96] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:28:18:70708][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/033d3e96] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 4ms
[2022-07-23 16:28:18:70710][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/033d3e96] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 6ms
[2022-07-23 16:28:18:70710][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/033d3e96's transaction end/6ms-------------------------
[2022-07-23 16:28:19:70896][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/244a70e3's transaction start------------------------------
[2022-07-23 16:28:19:70896][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [0]
[2022-07-23 16:28:19:70897][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [0]
[2022-07-23 16:28:19:70898][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 0, size 8, sort: UNSORTED]]
[2022-07-23 16:28:19:70901][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 3ms
[2022-07-23 16:28:19:70903][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 6ms
[2022-07-23 16:28:19:70904][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/244a70e3] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 8ms
[2022-07-23 16:28:19:70904][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/244a70e3's transaction end/8ms-------------------------
[2022-07-23 16:28:23:75498][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/9ae0c19d's transaction start------------------------------
[2022-07-23 16:28:23:75498][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [1]
[2022-07-23 16:28:23:75499][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [1]
[2022-07-23 16:28:23:75499][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 1, size 8, sort: UNSORTED]]
[2022-07-23 16:28:23:75502][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 3ms
[2022-07-23 16:28:23:75507][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 8ms
[2022-07-23 16:28:23:75507][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9ae0c19d] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 9ms
[2022-07-23 16:28:23:75507][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/9ae0c19d's transaction end/9ms-------------------------
[2022-07-23 16:28:27:78801][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/81d64898's transaction start------------------------------
[2022-07-23 16:28:27:78801][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [2]
[2022-07-23 16:28:27:78802][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [2]
[2022-07-23 16:28:27:78803][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 2, size 8, sort: UNSORTED]]
[2022-07-23 16:28:27:78805][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 2ms
[2022-07-23 16:28:27:78805][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 3ms
[2022-07-23 16:28:27:78806][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/81d64898] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 5ms
[2022-07-23 16:28:27:78806][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/81d64898's transaction end/5ms-------------------------
[2022-07-23 16:28:34:86232][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/65492864's transaction start------------------------------
[2022-07-23 16:28:34:86233][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-23 16:28:34:86233][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-23 16:28:34:86233][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-23 16:28:34:86236][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 3ms
[2022-07-23 16:28:34:86237][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-23 16:28:34:86237][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/65492864] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 5ms
[2022-07-23 16:28:34:86237][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/65492864's transaction end/5ms-------------------------
[2022-07-23 16:28:34:86238][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/29d9700e's transaction start------------------------------
[2022-07-23 16:28:34:86238][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/29d9700e] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-23 16:28:34:86245][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/29d9700e] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-23 16:28:34:86247][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/29d9700e] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 2ms
[2022-07-23 16:28:34:86247][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/29d9700e] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 9ms
[2022-07-23 16:28:34:86247][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/29d9700e's transaction end/9ms-------------------------
[2022-07-23 16:28:34:86248][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/c7cef86b's transaction start------------------------------
[2022-07-23 16:28:34:86248][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c7cef86b] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-23 16:28:34:86248][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c7cef86b] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-23 16:28:34:86250][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c7cef86b] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-23 16:28:34:86251][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c7cef86b] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 3ms
[2022-07-23 16:28:34:86252][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/c7cef86b's transaction end/3ms-------------------------
[2022-07-23 16:28:35:87259][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/3383d226's transaction start------------------------------
[2022-07-23 16:28:35:87260][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) ,args = [0]
[2022-07-23 16:28:35:87261][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] |-->Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) ,args = [0]
[2022-07-23 16:28:35:87261][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] |   |-->Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) ,args = [Page request [number: 0, size 8, sort: UNSORTED]]
[2022-07-23 16:28:35:87264][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] |   |<--Return:Slice com.myblog.article.repository.ArticleRepository.findByOrderByIdDesc(Pageable) time = 3ms
[2022-07-23 16:28:35:87265][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] |<--Return:List com.myblog.article.service.ArticleService.findRecentArticle(int) time = 4ms
[2022-07-23 16:28:35:87266][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/3383d226] Return:ResponseEntity com.myblog.article.controller.ArticleApiController.infinityScroll(int) time = 7ms
[2022-07-23 16:28:35:87266][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/3383d226's transaction end/7ms-------------------------
[2022-07-23 17:13:18:2770696][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-23 17:13:18:2770701][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-23 17:13:18:2770713][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-23 17:43:25:1022][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-23 17:43:25:1022][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 17612 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-23 17:43:25:1025][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-23 17:43:25:1068][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-23 17:43:25:1068][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-23 17:43:25:1068][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-23 17:43:25:1068][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-23 17:43:25:1070][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-23 17:43:25:1070][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-23 17:43:26:2125][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-23 17:43:26:2259][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 7 JPA repository interfaces.
