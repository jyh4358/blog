[2022-07-31 01:43:34:965][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-31 01:43:34:965][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 5504 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-31 01:43:34:972][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-31 01:43:34:1019][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-31 01:43:34:1019][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-31 01:43:34:1019][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-31 01:43:34:1019][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-31 01:43:34:1020][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-31 01:43:34:1020][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-31 01:43:35:1978][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-31 01:43:35:2107][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120 ms. Found 7 JPA repository interfaces.
[2022-07-31 01:43:35:2570][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:35:2578][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:35:2582][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:35:2583][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:35:2590][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3665][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3683][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3687][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3688][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800546040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3696][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$db7b91f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3717][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3728][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3728][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3728][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3729][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3731][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:3731][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:43:37:4201][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-31 01:43:37:4210][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:43:37:4211][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-31 01:43:37:4211][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-31 01:43:37:4347][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-31 01:43:37:4347][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3326 ms
[2022-07-31 01:43:37:4416][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-31 01:43:37:4578][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-31 01:43:37:4587][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-31 01:43:38:4769][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-31 01:43:38:4827][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-31 01:43:38:4991][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-31 01:43:38:5107][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-31 01:43:39:6030][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-31 01:43:39:6039][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:43:40:7396][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-31 01:43:40:7475][restartedMain] WARN  n.s.e.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/joddo/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.9.2/642832b8def8968295e9eedb41cd8fd625786561/ehcache-2.10.9.2.jar!/ehcache-failsafe.xml
[2022-07-31 01:43:41:7727][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@313c60d6. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-31 01:43:41:7728][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@313c60d6 with []
[2022-07-31 01:43:41:7834][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-31 01:43:41:8191][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-31 01:43:41:8577][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-31 01:43:42:8605][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:43:42:8623][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-31 01:43:42:8633][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 8.176 seconds (JVM running for 9.718)
[2022-07-31 01:43:51:18322][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-31 01:43:51:18323][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-31 01:43:51:18324][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-31 01:43:51:18400][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/08785a86's transaction start------------------------------
[2022-07-31 01:43:51:18400][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:43:51:18415][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:43:51:18422][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:43:51:18487][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 64ms
[2022-07-31 01:43:51:18488][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 73ms
[2022-07-31 01:43:51:18490][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/08785a86] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 91ms
[2022-07-31 01:43:51:18494][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/08785a86's transaction end/91ms-------------------------
[2022-07-31 01:43:51:18524][http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Cannot find cache named 'sadeBarCategoryCaching' for Builder[public com.myblog.category.dto.CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory()] caches=[sadeBarCategoryCaching] | key='0' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'] with root cause
java.lang.IllegalArgumentException: Cannot find cache named 'sadeBarCategoryCaching' for Builder[public com.myblog.category.dto.CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory()] caches=[sadeBarCategoryCaching] | key='0' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
	at org.springframework.cache.interceptor.AbstractCacheResolver.resolveCaches(AbstractCacheResolver.java:92)
	at org.springframework.cache.interceptor.CacheAspectSupport.getCaches(CacheAspectSupport.java:252)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext.<init>(CacheAspectSupport.java:724)
	at org.springframework.cache.interceptor.CacheAspectSupport.getOperationContext(CacheAspectSupport.java:265)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts.<init>(CacheAspectSupport.java:615)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.myblog.category.service.CategoryService$$EnhancerBySpringCGLIB$$13ad03f2.findSidebarCategory(<generated>)
	at com.myblog.common.interceper.SideBarInterceptor.postHandle(SideBarInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPostHandle(HandlerExecutionChain.java:165)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1074)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at io.sentry.spring.SentryUserFilter.doFilterInternal(SentryUserFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:178)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at io.sentry.spring.tracing.SentryTracingFilter.doFilterInternal(SentryTracingFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at io.sentry.spring.SentrySpringFilter.doFilterInternal(SentrySpringFilter.java:71)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2022-07-31 01:43:51:18561][http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalArgumentException: Cannot find cache named 'sadeBarCategoryCaching' for Builder[public com.myblog.category.dto.CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory()] caches=[sadeBarCategoryCaching] | key='0' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
	at org.springframework.cache.interceptor.AbstractCacheResolver.resolveCaches(AbstractCacheResolver.java:92)
	at org.springframework.cache.interceptor.CacheAspectSupport.getCaches(CacheAspectSupport.java:252)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext.<init>(CacheAspectSupport.java:724)
	at org.springframework.cache.interceptor.CacheAspectSupport.getOperationContext(CacheAspectSupport.java:265)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts.<init>(CacheAspectSupport.java:615)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.myblog.category.service.CategoryService$$EnhancerBySpringCGLIB$$13ad03f2.findSidebarCategory(<generated>)
	at com.myblog.common.interceper.SideBarInterceptor.postHandle(SideBarInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPostHandle(HandlerExecutionChain.java:165)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1074)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:80)
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:403)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2022-07-31 01:43:51:18562][http-nio-8080-exec-1] ERROR o.a.c.c.C.[Tomcat].[localhost] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalArgumentException: Cannot find cache named 'sadeBarCategoryCaching' for Builder[public com.myblog.category.dto.CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory()] caches=[sadeBarCategoryCaching] | key='0' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:80)
	at org.springframework.boot.web.servlet.filter.ErrorPageSecurityFilter.doFilter(ErrorPageSecurityFilter.java:70)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:106)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:87)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:219)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:213)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:102)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:711)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:385)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:313)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:403)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:249)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:344)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalArgumentException: Cannot find cache named 'sadeBarCategoryCaching' for Builder[public com.myblog.category.dto.CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory()] caches=[sadeBarCategoryCaching] | key='0' | keyGenerator='' | cacheManager='' | cacheResolver='' | condition='' | unless='' | sync='false'
	at org.springframework.cache.interceptor.AbstractCacheResolver.resolveCaches(AbstractCacheResolver.java:92)
	at org.springframework.cache.interceptor.CacheAspectSupport.getCaches(CacheAspectSupport.java:252)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContext.<init>(CacheAspectSupport.java:724)
	at org.springframework.cache.interceptor.CacheAspectSupport.getOperationContext(CacheAspectSupport.java:265)
	at org.springframework.cache.interceptor.CacheAspectSupport$CacheOperationContexts.<init>(CacheAspectSupport.java:615)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.myblog.category.service.CategoryService$$EnhancerBySpringCGLIB$$13ad03f2.findSidebarCategory(<generated>)
	at com.myblog.common.interceper.SideBarInterceptor.postHandle(SideBarInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPostHandle(HandlerExecutionChain.java:165)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1074)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 88 common frames omitted
[2022-07-31 01:44:48:75044][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:44:48:75049][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-31 01:44:48:75058][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-31 01:44:56:857][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-31 01:44:56:856][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 11148 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-31 01:44:56:860][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-31 01:44:56:905][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-31 01:44:56:905][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-31 01:44:56:905][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-31 01:44:56:905][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-31 01:44:56:906][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-31 01:44:56:906][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-31 01:44:57:1867][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-31 01:44:57:1992][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 7 JPA repository interfaces.
[2022-07-31 01:44:58:2446][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:58:2452][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:58:2455][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:58:2456][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:58:2462][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3531][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3548][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3552][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3554][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800546040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3562][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$e9017f08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3580][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3591][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3591][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3592][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3593][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3594][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:3595][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:44:59:4042][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-31 01:44:59:4051][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:44:59:4052][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-31 01:44:59:4052][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-31 01:44:59:4192][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-31 01:44:59:4193][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3286 ms
[2022-07-31 01:44:59:4258][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-31 01:45:00:4381][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-31 01:45:00:4390][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-31 01:45:00:4579][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-31 01:45:00:4625][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-31 01:45:00:4769][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-31 01:45:00:4881][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-31 01:45:01:5704][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-31 01:45:01:5713][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:45:02:6985][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-31 01:45:02:7067][restartedMain] WARN  n.s.e.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/joddo/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.9.2/642832b8def8968295e9eedb41cd8fd625786561/ehcache-2.10.9.2.jar!/ehcache-failsafe.xml
[2022-07-31 01:45:02:7302][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@39816a09. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-31 01:45:02:7303][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@39816a09 with []
[2022-07-31 01:45:03:7410][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-31 01:45:03:7794][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-31 01:45:03:8178][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-31 01:45:03:8206][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:45:03:8224][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-31 01:45:03:8234][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 7.866 seconds (JVM running for 9.251)
[2022-07-31 01:45:04:8376][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-31 01:45:04:8377][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-31 01:45:04:8378][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-31 01:45:04:8431][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/d533311a's transaction start------------------------------
[2022-07-31 01:45:04:8431][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:45:04:8443][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:45:04:8446][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:45:04:8500][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 54ms
[2022-07-31 01:45:04:8501][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 59ms
[2022-07-31 01:45:04:8502][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d533311a] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 71ms
[2022-07-31 01:45:04:8506][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/d533311a's transaction end/71ms-------------------------
[2022-07-31 01:45:04:8515][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/1e7ce3f4's transaction start------------------------------
[2022-07-31 01:45:04:8515][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e7ce3f4] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-31 01:45:04:8546][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e7ce3f4] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-31 01:45:04:8551][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e7ce3f4] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 5ms
[2022-07-31 01:45:04:8552][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e7ce3f4] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 37ms
[2022-07-31 01:45:04:8552][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/1e7ce3f4's transaction end/37ms-------------------------
[2022-07-31 01:45:04:8554][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/33e8aed0's transaction start------------------------------
[2022-07-31 01:45:04:8554][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33e8aed0] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 01:45:04:8557][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33e8aed0] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 01:45:04:8562][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33e8aed0] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 5ms
[2022-07-31 01:45:04:8567][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/33e8aed0] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 13ms
[2022-07-31 01:45:04:8567][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/33e8aed0's transaction end/13ms-------------------------
[2022-07-31 01:45:07:11880][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/72e959fb's transaction start------------------------------
[2022-07-31 01:45:07:11880][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:45:07:11881][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:45:07:11881][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:45:07:11885][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 01:45:07:11885][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-31 01:45:07:11885][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/72e959fb] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 5ms
[2022-07-31 01:45:07:11885][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/72e959fb's transaction end/5ms-------------------------
[2022-07-31 01:45:07:11887][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/8b290c08's transaction start------------------------------
[2022-07-31 01:45:07:11887][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8b290c08] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 01:45:07:11887][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8b290c08] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 01:45:07:11890][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8b290c08] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 3ms
[2022-07-31 01:45:07:11894][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8b290c08] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 7ms
[2022-07-31 01:45:07:11894][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/8b290c08's transaction end/7ms-------------------------
[2022-07-31 01:45:36:40624][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/d01bc9af's transaction start------------------------------
[2022-07-31 01:45:36:40625][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:45:36:40626][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:45:36:40626][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:45:36:40631][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 5ms
[2022-07-31 01:45:36:40631][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 5ms
[2022-07-31 01:45:36:40632][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/d01bc9af] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 8ms
[2022-07-31 01:45:36:40632][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/d01bc9af's transaction end/8ms-------------------------
[2022-07-31 01:45:36:40633][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------127.0.0.1/a15fd361's transaction start------------------------------
[2022-07-31 01:45:36:40633][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a15fd361] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 01:45:36:40633][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a15fd361] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 01:45:36:40635][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a15fd361] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-31 01:45:36:40639][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [127.0.0.1/a15fd361] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 6ms
[2022-07-31 01:45:36:40639][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------127.0.0.1/a15fd361's transaction end/6ms-------------------------
[2022-07-31 01:46:27:91949][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:46:27:91952][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-31 01:46:27:91959][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-31 01:46:35:812][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-31 01:46:35:811][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 22168 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-31 01:46:35:813][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-31 01:46:35:855][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-31 01:46:35:855][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-31 01:46:35:855][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-31 01:46:35:855][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-31 01:46:35:856][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-31 01:46:35:856][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-31 01:46:36:1783][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-31 01:46:36:1911][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 7 JPA repository interfaces.
[2022-07-31 01:46:37:2366][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:37:2372][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:37:2374][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:37:2376][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:37:2382][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3448][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3466][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3471][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3473][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800546040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3481][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$46c53c35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3502][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3516][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3516][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3517][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3518][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3520][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3520][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 01:46:38:3978][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-31 01:46:38:3997][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:46:38:3997][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-31 01:46:38:3997][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-31 01:46:38:4125][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-31 01:46:38:4125][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3268 ms
[2022-07-31 01:46:39:4188][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-31 01:46:39:4318][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-31 01:46:39:4327][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-31 01:46:39:4506][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-31 01:46:39:4560][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-31 01:46:39:4711][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-31 01:46:39:4821][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-31 01:46:40:5659][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-31 01:46:40:5669][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:46:41:6997][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-31 01:46:41:7076][restartedMain] WARN  n.s.e.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/joddo/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.9.2/642832b8def8968295e9eedb41cd8fd625786561/ehcache-2.10.9.2.jar!/ehcache-failsafe.xml
[2022-07-31 01:46:42:7319][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@68204eb4. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-31 01:46:42:7320][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@68204eb4 with []
[2022-07-31 01:46:42:7425][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-31 01:46:42:7783][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-31 01:46:43:8173][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-31 01:46:43:8202][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-31 01:46:43:8221][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-31 01:46:43:8230][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 7.864 seconds (JVM running for 9.266)
[2022-07-31 01:46:46:12040][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-31 01:46:46:12040][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-31 01:46:46:12042][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-31 01:46:46:12097][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/efdf92c9's transaction start------------------------------
[2022-07-31 01:46:46:12097][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:46:46:12108][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:46:46:12112][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:46:47:12166][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 54ms
[2022-07-31 01:46:47:12167][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 59ms
[2022-07-31 01:46:47:12168][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/efdf92c9] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 71ms
[2022-07-31 01:46:47:12172][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/efdf92c9's transaction end/71ms-------------------------
[2022-07-31 01:46:47:12181][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/a9e5426b's transaction start------------------------------
[2022-07-31 01:46:47:12181][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a9e5426b] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-31 01:46:47:12210][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a9e5426b] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-31 01:46:47:12215][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a9e5426b] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 5ms
[2022-07-31 01:46:47:12215][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a9e5426b] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 34ms
[2022-07-31 01:46:47:12215][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/a9e5426b's transaction end/34ms-------------------------
[2022-07-31 01:46:47:12218][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/9595f5d9's transaction start------------------------------
[2022-07-31 01:46:47:12218][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9595f5d9] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 01:46:47:12220][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9595f5d9] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 01:46:47:12225][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9595f5d9] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 5ms
[2022-07-31 01:46:47:12229][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/9595f5d9] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 11ms
[2022-07-31 01:46:47:12229][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/9595f5d9's transaction end/11ms-------------------------
[2022-07-31 01:46:49:14649][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/128de7ec's transaction start------------------------------
[2022-07-31 01:46:49:14650][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:46:49:14651][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:46:49:14651][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:46:49:14656][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 5ms
[2022-07-31 01:46:49:14656][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 5ms
[2022-07-31 01:46:49:14657][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/128de7ec] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 8ms
[2022-07-31 01:46:49:14657][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/128de7ec's transaction end/8ms-------------------------
[2022-07-31 01:48:22:108000][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/ea60fa43's transaction start------------------------------
[2022-07-31 01:48:22:108001][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 01:48:22:108002][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 01:48:22:108003][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 01:48:22:108009][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 6ms
[2022-07-31 01:48:22:108010][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 8ms
[2022-07-31 01:48:22:108010][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ea60fa43] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 10ms
[2022-07-31 01:48:22:108011][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/ea60fa43's transaction end/10ms-------------------------
[2022-07-31 01:50:04:209332][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 01:50:04:209336][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-31 01:50:04:209345][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-31 17:06:41:1013][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-31 17:06:41:1012][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 19908 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-31 17:06:41:1015][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-31 17:06:41:1061][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-31 17:06:41:1061][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-31 17:06:41:1061][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-31 17:06:41:1061][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-31 17:06:41:1062][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-31 17:06:41:1062][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-31 17:06:42:2124][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-31 17:06:42:2266][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 7 JPA repository interfaces.
[2022-07-31 17:06:43:2793][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:43:2799][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:43:2803][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:43:2804][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:43:2811][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3889][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3907][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3912][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3914][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800546040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3922][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$ff80d924] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3946][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3958][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3959][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3959][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3960][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3962][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:44:3962][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:06:45:4453][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-31 17:06:45:4463][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-31 17:06:45:4464][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-31 17:06:45:4464][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-31 17:06:45:4617][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-31 17:06:45:4618][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3555 ms
[2022-07-31 17:06:45:4682][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-31 17:06:45:4818][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-31 17:06:45:4826][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-31 17:06:45:5014][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-31 17:06:45:5073][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-31 17:06:45:5241][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-31 17:06:45:5361][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-31 17:06:46:6227][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-31 17:06:46:6236][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 17:06:48:7663][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-31 17:06:48:7752][restartedMain] WARN  n.s.e.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/joddo/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.9.2/642832b8def8968295e9eedb41cd8fd625786561/ehcache-2.10.9.2.jar!/ehcache-failsafe.xml
[2022-07-31 17:06:48:8027][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@159d9f5d. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-31 17:06:48:8028][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@159d9f5d with []
[2022-07-31 17:06:48:8136][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-31 17:06:49:8527][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-31 17:06:49:8929][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-31 17:06:49:8958][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-31 17:06:49:8977][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-31 17:06:49:8987][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 8.545 seconds (JVM running for 10.224)
[2022-07-31 17:06:55:15065][http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-31 17:06:55:15065][http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-31 17:06:55:15066][http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-31 17:06:55:15131][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/bbdf9671's transaction start------------------------------
[2022-07-31 17:06:55:15131][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:06:55:15144][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:06:55:15149][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:06:55:15202][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 53ms
[2022-07-31 17:06:55:15203][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 59ms
[2022-07-31 17:06:55:15204][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bbdf9671] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 73ms
[2022-07-31 17:06:55:15207][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/bbdf9671's transaction end/73ms-------------------------
[2022-07-31 17:06:55:15216][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/ae27ae77's transaction start------------------------------
[2022-07-31 17:06:55:15216][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ae27ae77] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-31 17:06:55:15244][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ae27ae77] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-31 17:06:55:15249][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ae27ae77] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 5ms
[2022-07-31 17:06:55:15249][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ae27ae77] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 33ms
[2022-07-31 17:06:55:15250][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/ae27ae77's transaction end/33ms-------------------------
[2022-07-31 17:06:55:15252][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/391d8c2d's transaction start------------------------------
[2022-07-31 17:06:55:15253][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/391d8c2d] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 17:06:55:15255][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/391d8c2d] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 17:06:55:15260][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/391d8c2d] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 5ms
[2022-07-31 17:06:55:15264][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/391d8c2d] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 12ms
[2022-07-31 17:06:55:15264][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/391d8c2d's transaction end/12ms-------------------------
[2022-07-31 17:06:58:18409][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/0b34a57a's transaction start------------------------------
[2022-07-31 17:06:58:18410][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:06:58:18410][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:06:58:18411][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:06:58:18415][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 17:06:58:18415][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 5ms
[2022-07-31 17:06:58:18416][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/0b34a57a] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 7ms
[2022-07-31 17:06:58:18416][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/0b34a57a's transaction end/7ms-------------------------
[2022-07-31 17:07:03:22693][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/d2c15e6c's transaction start------------------------------
[2022-07-31 17:07:03:22694][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2c15e6c] Return:String com.myblog.member.controller.MemberController.login() ,args = []
[2022-07-31 17:07:03:22696][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/d2c15e6c] Return:String com.myblog.member.controller.MemberController.login() time = 3ms
[2022-07-31 17:07:03:22696][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/d2c15e6c's transaction end/3ms-------------------------
[2022-07-31 17:07:04:23897][http-nio-8080-exec-2] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [400] milliseconds.
[2022-07-31 17:07:07:26507][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/b2414e71's transaction start------------------------------
[2022-07-31 17:07:07:26507][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b2414e71] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) ,args = [org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest@77a594b8]
[2022-07-31 17:07:07:26640][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b2414e71] |-->Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) ,args = [jyh4358@gmail.com]
[2022-07-31 17:07:07:26649][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b2414e71] |<--Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) time = 9ms
[2022-07-31 17:07:07:26650][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b2414e71] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) time = 143ms
[2022-07-31 17:07:07:26651][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/b2414e71's transaction end/143ms-------------------------
[2022-07-31 17:07:07:26669][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/edfbbd6d's transaction start------------------------------
[2022-07-31 17:07:07:26670][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:07:07:26670][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:07:07:26671][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:07:07:26675][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 17:07:07:26675][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 5ms
[2022-07-31 17:07:07:26676][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/edfbbd6d] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 7ms
[2022-07-31 17:07:07:26676][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/edfbbd6d's transaction end/7ms-------------------------
[2022-07-31 17:07:17:36738][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/1a199279's transaction start------------------------------
[2022-07-31 17:07:17:36739][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:07:17:36741][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:07:17:36741][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:07:17:36747][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 6ms
[2022-07-31 17:07:17:36747][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 6ms
[2022-07-31 17:07:17:36748][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1a199279] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 10ms
[2022-07-31 17:07:17:36748][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/1a199279's transaction end/10ms-------------------------
[2022-07-31 17:07:21:41340][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/7170393c's transaction start------------------------------
[2022-07-31 17:07:21:41340][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, null, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@74ecac9d]
[2022-07-31 17:07:21:41342][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:07:21:41343][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:21:41347][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 4ms
[2022-07-31 17:07:21:41350][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:21:41361][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 11ms
[2022-07-31 17:07:21:41368][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 26ms
[2022-07-31 17:07:21:41369][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, true]
[2022-07-31 17:07:21:41370][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:21:41370][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:07:21:41370][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:21:41411][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 41ms
[2022-07-31 17:07:22:41458][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@569988ab]
[2022-07-31 17:07:22:41486][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 28ms
[2022-07-31 17:07:22:41486][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 117ms
[2022-07-31 17:07:22:41492][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7170393c] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 152ms
[2022-07-31 17:07:22:41493][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/7170393c's transaction end/152ms-------------------------
[2022-07-31 17:07:29:48554][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/519d114f's transaction start------------------------------
[2022-07-31 17:07:29:48555][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 9]
[2022-07-31 17:07:29:48557][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |-->Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 9]
[2022-07-31 17:07:29:48559][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [9]
[2022-07-31 17:07:29:48562][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 3ms
[2022-07-31 17:07:29:48562][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |   |-->Return:void org.springframework.data.repository.CrudRepository.delete(Object) ,args = [com.myblog.comment.model.Comment@2278ae41]
[2022-07-31 17:07:29:48575][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |   |<--Return:void org.springframework.data.repository.CrudRepository.delete(Object) time = 13ms
[2022-07-31 17:07:29:48575][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] |<--Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) time = 18ms
[2022-07-31 17:07:29:48587][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/519d114f] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) time = 33ms
[2022-07-31 17:07:29:48587][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/519d114f's transaction end/33ms-------------------------
[2022-07-31 17:07:29:48599][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/e400b3dc's transaction start------------------------------
[2022-07-31 17:07:29:48599][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7e18bb7]
[2022-07-31 17:07:29:48600][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:07:29:48601][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:29:48602][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-31 17:07:29:48603][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:29:48606][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 3ms
[2022-07-31 17:07:29:48613][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 13ms
[2022-07-31 17:07:29:48614][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:07:29:48614][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:29:48614][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:07:29:48614][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:29:48616][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:07:29:48621][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@3acb9984]
[2022-07-31 17:07:29:48624][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 3ms
[2022-07-31 17:07:29:48624][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 10ms
[2022-07-31 17:07:29:48625][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e400b3dc] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 26ms
[2022-07-31 17:07:29:48626][http-nio-8080-exec-7] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/e400b3dc's transaction end/26ms-------------------------
[2022-07-31 17:07:41:60430][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/ace4c8a6's transaction start------------------------------
[2022-07-31 17:07:41:60430][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@606b922a]
[2022-07-31 17:07:41:60431][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:07:41:60431][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:41:60433][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:07:41:60433][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:41:60435][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:07:41:60439][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 8ms
[2022-07-31 17:07:41:60440][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:07:41:60440][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:41:60440][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:07:41:60440][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:41:60442][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:07:41:60445][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@a7bb6d]
[2022-07-31 17:07:41:60447][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 2ms
[2022-07-31 17:07:41:60447][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 7ms
[2022-07-31 17:07:41:60448][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ace4c8a6] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 18ms
[2022-07-31 17:07:41:60448][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/ace4c8a6's transaction end/18ms-------------------------
[2022-07-31 17:07:53:72618][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/c2a2fe07's transaction start------------------------------
[2022-07-31 17:07:53:72618][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 8]
[2022-07-31 17:07:53:72619][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |-->Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 8]
[2022-07-31 17:07:53:72619][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [8]
[2022-07-31 17:07:53:72621][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:07:53:72621][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |   |-->Return:void org.springframework.data.repository.CrudRepository.delete(Object) ,args = [com.myblog.comment.model.Comment@2032d365]
[2022-07-31 17:07:53:72623][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |   |<--Return:void org.springframework.data.repository.CrudRepository.delete(Object) time = 2ms
[2022-07-31 17:07:53:72623][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] |<--Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) time = 4ms
[2022-07-31 17:07:53:72628][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c2a2fe07] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) time = 10ms
[2022-07-31 17:07:53:72628][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/c2a2fe07's transaction end/10ms-------------------------
[2022-07-31 17:07:53:72637][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/eb1c50fd's transaction start------------------------------
[2022-07-31 17:07:53:72637][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1f23e1b5]
[2022-07-31 17:07:53:72638][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:07:53:72638][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:53:72639][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-31 17:07:53:72640][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:53:72641][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 1ms
[2022-07-31 17:07:53:72646][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 8ms
[2022-07-31 17:07:53:72647][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:07:53:72647][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:07:53:72647][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:07:53:72648][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:07:53:72650][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:07:53:72654][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@7bd9fc9c]
[2022-07-31 17:07:53:72656][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 2ms
[2022-07-31 17:07:53:72656][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 9ms
[2022-07-31 17:07:53:72657][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/eb1c50fd] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 20ms
[2022-07-31 17:07:53:72657][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/eb1c50fd's transaction end/20ms-------------------------
[2022-07-31 17:07:55:75055][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/1e5326bd's transaction start------------------------------
[2022-07-31 17:07:55:75055][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:07:55:75056][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:07:55:75056][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:07:55:75060][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 17:07:55:75060][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-31 17:07:55:75061][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/1e5326bd] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 6ms
[2022-07-31 17:07:55:75061][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/1e5326bd's transaction end/6ms-------------------------
[2022-07-31 17:08:06:85445][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/64ebf535's transaction start------------------------------
[2022-07-31 17:08:06:85445][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:08:06:85446][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:08:06:85446][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:08:06:85449][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 3ms
[2022-07-31 17:08:06:85450][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-31 17:08:06:85450][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/64ebf535] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 5ms
[2022-07-31 17:08:06:85450][http-nio-8080-exec-9] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/64ebf535's transaction end/5ms-------------------------
[2022-07-31 17:08:10:90224][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/7a24f096's transaction start------------------------------
[2022-07-31 17:08:10:90224][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@4bf9c08e]
[2022-07-31 17:08:10:90225][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:08:10:90226][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:08:10:90227][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-31 17:08:10:90227][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:08:10:90229][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:08:10:90232][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 7ms
[2022-07-31 17:08:10:90232][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:08:10:90232][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:08:10:90232][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:08:10:90233][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:08:10:90234][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 1ms
[2022-07-31 17:08:10:90238][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@4bbcac87]
[2022-07-31 17:08:10:90240][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 2ms
[2022-07-31 17:08:10:90240][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 8ms
[2022-07-31 17:08:10:90241][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/7a24f096] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 17ms
[2022-07-31 17:08:10:90241][http-nio-8080-exec-4] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/7a24f096's transaction end/17ms-------------------------
[2022-07-31 17:08:37:116457][SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 17:08:37:116460][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
[2022-07-31 17:08:37:116468][SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
[2022-07-31 17:08:45:839][background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.3.Final
[2022-07-31 17:08:45:838][restartedMain] INFO  com.myblog.MyblogApplication - Starting MyblogApplication using Java 11.0.13 on DESKTOP-P1F89EE with PID 10724 (C:\tools\spring\project\myblog\build\classes\java\main started by joddo in C:\tools\spring\project\myblog)
[2022-07-31 17:08:45:841][restartedMain] INFO  com.myblog.MyblogApplication - The following 7 profiles are active: "db", "oauth", "aws", "git", "sentry", "key", "local"
[2022-07-31 17:08:45:882][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 65:13]
[2022-07-31 17:08:45:882][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 43:13]
[2022-07-31 17:08:45:882][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 22:13]
[2022-07-31 17:08:45:882][restartedMain] WARN  o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application-db.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application-db.yml] - 2:13]
[2022-07-31 17:08:45:883][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-31 17:08:45:883][restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-31 17:08:46:1826][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-31 17:08:46:1949][restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 116 ms. Found 7 JPA repository interfaces.
[2022-07-31 17:08:46:2397][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryAdviceConfiguration' of type [io.sentry.spring.tracing.SentryAdviceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:46:2403][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentrySpanPointcutConfiguration' of type [io.sentry.spring.tracing.SentrySpanPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:46:2406][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:46:2407][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:46:2413][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$ContextTagsEventProcessorConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3474][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentry-io.sentry.spring.boot.SentryProperties' of type [io.sentry.spring.boot.SentryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3493][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'contextTagsEventProcessor' of type [io.sentry.spring.ContextTagsEventProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3498][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'inAppPackagesResolver' of type [io.sentry.spring.boot.InAppIncludesResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3500][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryOptionsConfiguration' of type [io.sentry.spring.boot.SentryAutoConfiguration$HubConfiguration$$Lambda$600/0x0000000800546040] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3507][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myblogApplication' of type [com.myblog.MyblogApplication$$EnhancerBySpringCGLIB$$683337eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:47:3526][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryHub' of type [io.sentry.HubAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3536][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvice' of type [io.sentry.spring.tracing.SentrySpanAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3537][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentrySpanAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3537][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'io.sentry.spring.tracing.SentryTransactionPointcutConfiguration' of type [io.sentry.spring.tracing.SentryTransactionPointcutConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3538][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionPointcut' of type [org.springframework.aop.support.ComposablePointcut] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3540][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvice' of type [io.sentry.spring.tracing.SentryTransactionAdvice] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3540][restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sentryTransactionAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[2022-07-31 17:08:48:3993][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[2022-07-31 17:08:48:4003][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[2022-07-31 17:08:48:4003][restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
[2022-07-31 17:08:48:4003][restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.60]
[2022-07-31 17:08:48:4186][restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
[2022-07-31 17:08:48:4186][restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3302 ms
[2022-07-31 17:08:48:4273][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
[2022-07-31 17:08:48:4440][restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
[2022-07-31 17:08:48:4465][restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/myblog?allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false&cacheDefaultTimezone=false'
[2022-07-31 17:08:49:4588][restartedMain] WARN  o.a.c.c.C.[Tomcat].[localhost].[/] - Cannot deserialize session attribute [SPRING_SECURITY_CONTEXT] for session [667301FBE7A17E5BB1450CEB82DA39F8]
[2022-07-31 17:08:49:4712][restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-31 17:08:49:4773][restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.7.Final
[2022-07-31 17:08:49:4911][restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-31 17:08:49:5019][restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[2022-07-31 17:08:50:5837][restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-31 17:08:50:5846][restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-31 17:08:51:7210][restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-31 17:08:51:7298][restartedMain] WARN  n.s.e.config.ConfigurationFactory - No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/C:/Users/joddo/.gradle/caches/modules-2/files-2.1/net.sf.ehcache/ehcache/2.10.9.2/642832b8def8968295e9eedb41cd8fd625786561/ehcache-2.10.9.2.jar!/ehcache-failsafe.xml
[2022-07-31 17:08:52:7551][restartedMain] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@49bbaf77. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
[2022-07-31 17:08:52:7552][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will secure org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@49bbaf77 with []
[2022-07-31 17:08:52:7659][restartedMain] INFO  o.s.s.w.DefaultSecurityFilterChain - Will not secure any request
[2022-07-31 17:08:52:8006][restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
[2022-07-31 17:08:52:8386][restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
[2022-07-31 17:08:52:8414][restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[2022-07-31 17:08:52:8432][restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[2022-07-31 17:08:52:8443][restartedMain] INFO  com.myblog.MyblogApplication - Started MyblogApplication in 8.066 seconds (JVM running for 9.527)
[2022-07-31 17:08:53:8548][http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-31 17:08:53:8548][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[2022-07-31 17:08:53:8550][http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
[2022-07-31 17:08:53:8605][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2fff0a2d's transaction start------------------------------
[2022-07-31 17:08:53:8605][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:08:53:8616][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:08:53:8621][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:08:53:8675][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 54ms
[2022-07-31 17:08:53:8676][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 60ms
[2022-07-31 17:08:53:8677][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2fff0a2d] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 73ms
[2022-07-31 17:08:53:8681][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2fff0a2d's transaction end/73ms-------------------------
[2022-07-31 17:08:53:8690][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/54c03e64's transaction start------------------------------
[2022-07-31 17:08:53:8690][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/54c03e64] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() ,args = []
[2022-07-31 17:08:53:8719][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/54c03e64] |-->Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() ,args = []
[2022-07-31 17:08:53:8724][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/54c03e64] |<--Return:List com.myblog.category.resposiotry.CategoryRepository.findCategoryCount() time = 5ms
[2022-07-31 17:08:53:8724][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/54c03e64] Return:CategoryListDto com.myblog.category.service.CategoryService.findSidebarCategory() time = 34ms
[2022-07-31 17:08:53:8724][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/54c03e64's transaction end/34ms-------------------------
[2022-07-31 17:08:53:8726][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/555dcbbe's transaction start------------------------------
[2022-07-31 17:08:53:8726][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/555dcbbe] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 17:08:53:8729][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/555dcbbe] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 17:08:53:8733][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/555dcbbe] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 4ms
[2022-07-31 17:08:53:8736][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/555dcbbe] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 10ms
[2022-07-31 17:08:53:8736][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/555dcbbe's transaction end/10ms-------------------------
[2022-07-31 17:08:58:14033][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/ca6f0a54's transaction start------------------------------
[2022-07-31 17:08:58:14033][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ca6f0a54] Return:String com.myblog.member.controller.MemberController.login() ,args = []
[2022-07-31 17:08:58:14035][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/ca6f0a54] Return:String com.myblog.member.controller.MemberController.login() time = 2ms
[2022-07-31 17:08:58:14036][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/ca6f0a54's transaction end/2ms-------------------------
[2022-07-31 17:09:01:17203][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/8766826a's transaction start------------------------------
[2022-07-31 17:09:01:17203][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8766826a] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) ,args = [org.springframework.security.oauth2.client.userinfo.OAuth2UserRequest@62340767]
[2022-07-31 17:09:01:17353][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8766826a] |-->Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) ,args = [jyh4358@gmail.com]
[2022-07-31 17:09:01:17360][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8766826a] |<--Return:Optional com.myblog.member.repository.MemberRepository.findByEmail(String) time = 7ms
[2022-07-31 17:09:01:17361][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/8766826a] Return:OAuth2User com.myblog.security.oauth2.service.Oauth2MemberService.loadUser(OAuth2UserRequest) time = 158ms
[2022-07-31 17:09:01:17361][http-nio-8080-exec-10] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/8766826a's transaction end/158ms-------------------------
[2022-07-31 17:09:02:17770][http-nio-8080-exec-10] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [394] milliseconds.
[2022-07-31 17:09:02:17776][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/c5149856's transaction start------------------------------
[2022-07-31 17:09:02:17776][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:09:02:17777][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:09:02:17777][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:09:02:17781][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 17:09:02:17781][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-31 17:09:02:17782][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/c5149856] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 6ms
[2022-07-31 17:09:02:17782][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/c5149856's transaction end/6ms-------------------------
[2022-07-31 17:09:06:21874][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/23829823's transaction start------------------------------
[2022-07-31 17:09:06:21874][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@528560b2]
[2022-07-31 17:09:06:21876][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:09:06:21877][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:06:21882][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 5ms
[2022-07-31 17:09:06:21884][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:06:21892][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 8ms
[2022-07-31 17:09:06:21898][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 22ms
[2022-07-31 17:09:06:21899][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:09:06:21899][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:06:21900][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-31 17:09:06:21900][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:06:21906][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 6ms
[2022-07-31 17:09:06:21953][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@1bb72552]
[2022-07-31 17:09:06:21957][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 4ms
[2022-07-31 17:09:06:21958][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 59ms
[2022-07-31 17:09:06:21959][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/23829823] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 85ms
[2022-07-31 17:09:06:21959][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/23829823's transaction end/85ms-------------------------
[2022-07-31 17:09:13:28766][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/b5d1346f's transaction start------------------------------
[2022-07-31 17:09:13:28766][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.saveComment(CustomOauth2User,CommentSaveRequest) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], CommentSaveRequest(articleId=1, content=123, secret=false, parentCommentId=null)]
[2022-07-31 17:09:13:28769][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |-->Return:void com.myblog.comment.service.CommentService.saveComment(CustomOauth2User,CommentSaveRequest) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], CommentSaveRequest(articleId=1, content=123, secret=false, parentCommentId=null)]
[2022-07-31 17:09:13:28771][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:13:28773][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:09:13:28774][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:13:28776][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:09:13:28777][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |-->Return:Object org.springframework.data.repository.CrudRepository.save(Object) ,args = [com.myblog.comment.model.Comment@402a5251]
[2022-07-31 17:09:13:28827][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |   |<--Return:Object org.springframework.data.repository.CrudRepository.save(Object) time = 50ms
[2022-07-31 17:09:13:28827][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] |<--Return:void com.myblog.comment.service.CommentService.saveComment(CustomOauth2User,CommentSaveRequest) time = 58ms
[2022-07-31 17:09:13:28832][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/b5d1346f] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.saveComment(CustomOauth2User,CommentSaveRequest) time = 66ms
[2022-07-31 17:09:13:28832][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/b5d1346f's transaction end/66ms-------------------------
[2022-07-31 17:09:13:28843][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/50aca59c's transaction start------------------------------
[2022-07-31 17:09:13:28843][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@360cfe7e]
[2022-07-31 17:09:13:28846][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:09:13:28846][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:13:28848][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:09:13:28848][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:13:28851][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 3ms
[2022-07-31 17:09:13:28854][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 8ms
[2022-07-31 17:09:13:28855][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:09:13:28855][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:13:28856][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 1ms
[2022-07-31 17:09:13:28856][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:13:28858][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:09:13:28862][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@40475f65]
[2022-07-31 17:09:13:28865][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 3ms
[2022-07-31 17:09:13:28865][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 10ms
[2022-07-31 17:09:13:28866][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/50aca59c] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 23ms
[2022-07-31 17:09:13:28866][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/50aca59c's transaction end/23ms-------------------------
[2022-07-31 17:09:13:28866][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2e6f9506's transaction start------------------------------
[2022-07-31 17:09:13:28867][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e6f9506] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 17:09:13:28867][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e6f9506] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 17:09:13:28868][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e6f9506] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 1ms
[2022-07-31 17:09:13:28868][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2e6f9506] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 2ms
[2022-07-31 17:09:13:28868][http-nio-8080-exec-5] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2e6f9506's transaction end/2ms-------------------------
[2022-07-31 17:09:22:38141][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/f1480970's transaction start------------------------------
[2022-07-31 17:09:22:38141][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:09:22:38142][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:09:22:38143][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:09:22:38146][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 3ms
[2022-07-31 17:09:22:38146][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 4ms
[2022-07-31 17:09:22:38147][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/f1480970] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 6ms
[2022-07-31 17:09:22:38147][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/f1480970's transaction end/6ms-------------------------
[2022-07-31 17:09:27:43106][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/bb3d8153's transaction start------------------------------
[2022-07-31 17:09:27:43107][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) ,args = [1, 1/, {}, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@c41a91]
[2022-07-31 17:09:27:43108][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |-->Return:List com.myblog.comment.service.CommentService.findCommentList(Long) ,args = [1]
[2022-07-31 17:09:27:43108][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:27:43110][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:09:27:43110][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |-->Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:27:43112][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |<--Return:List com.myblog.comment.repository.CommentRepository.findByArticle_Id(Long) time = 2ms
[2022-07-31 17:09:27:43116][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |<--Return:List com.myblog.comment.service.CommentService.findCommentList(Long) time = 8ms
[2022-07-31 17:09:27:43116][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |-->Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) ,args = [1, false]
[2022-07-31 17:09:27:43117][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [1]
[2022-07-31 17:09:27:43117][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 0ms
[2022-07-31 17:09:27:43117][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |-->Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) ,args = [1]
[2022-07-31 17:09:27:43120][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |<--Return:List com.myblog.article.repository.ArticleTagRepository.findByArticle_Id(Long) time = 3ms
[2022-07-31 17:09:27:43123][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) ,args = [com.myblog.category.model.Category@4bd3499f]
[2022-07-31 17:09:27:43125][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByCategoryOrderByCreatedDateDesc(Category) time = 2ms
[2022-07-31 17:09:27:43125][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] |<--Return:ArticleDetailResponse com.myblog.article.service.ArticleService.findArticleDetail(Long,boolean) time = 9ms
[2022-07-31 17:09:27:43126][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/bb3d8153] Return:String com.myblog.article.controller.ArticleController.articleView(Long,String,Model,HttpServletResponse) time = 20ms
[2022-07-31 17:09:27:43126][http-nio-8080-exec-6] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/bb3d8153's transaction end/20ms-------------------------
[2022-07-31 17:09:34:49968][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/e51d7227's transaction start------------------------------
[2022-07-31 17:09:34:49968][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], ALL, Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-31 17:09:34:49969][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] |-->Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) ,args = [ALL, Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-31 17:09:34:49970][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-31 17:09:34:49982][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 12ms
[2022-07-31 17:09:34:50040][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] |<--Return:Page com.myblog.article.service.ArticleService.findArticleByCategory(String,Pageable) time = 71ms
[2022-07-31 17:09:34:50043][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/e51d7227] Return:String com.myblog.article.controller.ArticleController.adminSearchArticle(Pageable,String,CustomOauth2User,Model) time = 75ms
[2022-07-31 17:09:34:50043][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/e51d7227's transaction end/75ms-------------------------
[2022-07-31 17:09:37:52634][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/22df36c7's transaction start------------------------------
[2022-07-31 17:09:37:52634][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] Return:String com.myblog.comment.controller.CommentController.findAllComment(Pageable,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-31 17:09:37:52637][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] |-->Return:Page com.myblog.comment.service.CommentService.findAllComment(Pageable,CustomOauth2User) ,args = [Page request [number: 0, size 8, sort: id: DESC], Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-31 17:09:37:52638][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-31 17:09:37:52640][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 2ms
[2022-07-31 17:09:37:52643][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] |<--Return:Page com.myblog.comment.service.CommentService.findAllComment(Pageable,CustomOauth2User) time = 6ms
[2022-07-31 17:09:37:52644][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/22df36c7] Return:String com.myblog.comment.controller.CommentController.findAllComment(Pageable,CustomOauth2User,Model) time = 10ms
[2022-07-31 17:09:37:52644][http-nio-8080-exec-1] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/22df36c7's transaction end/10ms-------------------------
[2022-07-31 17:09:40:55542][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/a64f3f30's transaction start------------------------------
[2022-07-31 17:09:40:55543][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 10]
[2022-07-31 17:09:40:55543][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |-->Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) ,args = [Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], 10]
[2022-07-31 17:09:40:55545][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |   |-->Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) ,args = [10]
[2022-07-31 17:09:40:55547][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |   |<--Return:Optional org.springframework.data.repository.CrudRepository.findById(Object) time = 2ms
[2022-07-31 17:09:40:55547][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |   |-->Return:void org.springframework.data.repository.CrudRepository.delete(Object) ,args = [com.myblog.comment.model.Comment@559e46bd]
[2022-07-31 17:09:40:55551][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |   |<--Return:void org.springframework.data.repository.CrudRepository.delete(Object) time = 4ms
[2022-07-31 17:09:40:55551][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] |<--Return:void com.myblog.comment.service.CommentService.deleteComment(CustomOauth2User,Long) time = 8ms
[2022-07-31 17:09:40:55567][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/a64f3f30] Return:ResponseEntity com.myblog.comment.controller.CommentApiController.deleteComment(CustomOauth2User,Long) time = 25ms
[2022-07-31 17:09:40:55567][http-nio-8080-exec-2] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/a64f3f30's transaction end/25ms-------------------------
[2022-07-31 17:09:40:55575][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/6b930003's transaction start------------------------------
[2022-07-31 17:09:40:55575][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] Return:String com.myblog.comment.controller.CommentController.findAllComment(Pageable,CustomOauth2User,Model) ,args = [Page request [number: 0, size 8, sort: id: DESC], Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}], {}]
[2022-07-31 17:09:40:55576][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] |-->Return:Page com.myblog.comment.service.CommentService.findAllComment(Pageable,CustomOauth2User) ,args = [Page request [number: 0, size 8, sort: id: DESC], Name: [조윤호#11371], Granted Authorities: [[ROLE_ADMIN]], User Attributes: [{sub=113717757792959427807, name=조윤호, given_name=윤호, family_name=조, picture=https://lh3.googleusercontent.com/a/AItbvmlXvi2HpSqlOdZ-DWXD7w4_tUOYylsBDhUIyP4Z=s96-c, email=jyh4358@gmail.com, email_verified=true, locale=ko}]]
[2022-07-31 17:09:40:55576][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] |   |-->Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) ,args = [Page request [number: 0, size 8, sort: id: DESC]]
[2022-07-31 17:09:40:55578][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] |   |<--Return:Page org.springframework.data.repository.PagingAndSortingRepository.findAll(Pageable) time = 2ms
[2022-07-31 17:09:40:55581][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] |<--Return:Page com.myblog.comment.service.CommentService.findAllComment(Pageable,CustomOauth2User) time = 5ms
[2022-07-31 17:09:40:55581][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/6b930003] Return:String com.myblog.comment.controller.CommentController.findAllComment(Pageable,CustomOauth2User,Model) time = 6ms
[2022-07-31 17:09:40:55582][http-nio-8080-exec-3] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/6b930003's transaction end/6ms-------------------------
[2022-07-31 17:09:46:61707][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/56dfc63a's transaction start------------------------------
[2022-07-31 17:09:46:61708][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] Return:String com.myblog.article.controller.ArticleController.index(Model) ,args = [{}]
[2022-07-31 17:09:46:61709][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] |-->Return:List com.myblog.article.service.ArticleService.findPopularArticle() ,args = []
[2022-07-31 17:09:46:61709][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] |   |-->Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() ,args = []
[2022-07-31 17:09:46:61714][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] |   |<--Return:List com.myblog.article.repository.ArticleRepository.findTop6ByOrderByHitDesc() time = 4ms
[2022-07-31 17:09:46:61714][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] |<--Return:List com.myblog.article.service.ArticleService.findPopularArticle() time = 5ms
[2022-07-31 17:09:46:61715][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/56dfc63a] Return:String com.myblog.article.controller.ArticleController.index(Model) time = 8ms
[2022-07-31 17:09:46:61715][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/56dfc63a's transaction end/8ms-------------------------
[2022-07-31 17:09:46:61716][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - ------------------------------0:0:0:0:0:0:0:1/2a41f5cd's transaction start------------------------------
[2022-07-31 17:09:46:61716][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2a41f5cd] Return:List com.myblog.comment.service.CommentService.findRecentComment() ,args = []
[2022-07-31 17:09:46:61716][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2a41f5cd] |-->Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() ,args = []
[2022-07-31 17:09:46:61718][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2a41f5cd] |<--Return:List com.myblog.comment.repository.CommentRepository.findTop5ByOrderByIdDesc() time = 2ms
[2022-07-31 17:09:46:61720][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - [0:0:0:0:0:0:0:1/2a41f5cd] Return:List com.myblog.comment.service.CommentService.findRecentComment() time = 4ms
[2022-07-31 17:09:46:61720][http-nio-8080-exec-8] INFO  com.myblog.common.log.LogTracer - -------------------------------0:0:0:0:0:0:0:1/2a41f5cd's transaction end/4ms-------------------------
